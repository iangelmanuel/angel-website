---
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle
} from "./ui/card"
import { Badge } from "./ui/badge"
import { buttonVariants } from "./ui/button"

import { dateFormatter } from "@/lib/dateFormatter"

import { Calendar, Github, ExternalLink } from "lucide-react"

import type { CollectionEntry } from "astro:content"
import type { LanguageData } from "@/types/language"

type Props = {
  t: LanguageData
  data: CollectionEntry<"projects">["data"]
}

const { data, t } = Astro.props
---

<Card className="group p-4 sm:h-[500px] sm:p-6">
  <CardHeader className="aspect-video overflow-hidden rounded border">
    <img
      src={data.image}
      alt={`${data.title} Image`}
      width="100%"
      height="100%"
      loading="lazy"
      class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-115"
    />
  </CardHeader>

  <CardContent className="flex flex-col justify-center gap-1 p-0">
    <div class="flex items-center gap-2">
      <CardTitle className="text-lg font-medium sm:text-xl"
        >{data.title}</CardTitle
      >

      <Badge variant="outline">
        {data.githubUrl.isPrivate ? "Private" : "Public"}
      </Badge>
    </div>

    <span class="text-foreground/40 flex items-center text-xs">
      <Calendar className="mr-1 inline size-4" />
      {
        dateFormatter(data.publishDate, {
          day: "2-digit",
          month: "short",
          year: "numeric"
        })
      }
    </span>

    <CardDescription
      className="text-muted-foreground mt-1.5 mb-3 line-clamp-2 text-xs sm:mb-4 sm:text-sm"
    >
      {data.description}
    </CardDescription>

    <div class="mb-3 flex flex-wrap gap-1 sm:mb-4 sm:gap-2">
      {data.technologies.map((tag) => <Badge variant="secondary">{tag}</Badge>)}
    </div>
  </CardContent>

  <CardFooter className="flex items-center gap-2 p-0 sm:mt-auto sm:gap-3">
    {
      !data.githubUrl.isPrivate && (
        <a
          href={data.githubUrl.url}
          target="_blank"
          rel="noopener noreferrer"
          class={buttonVariants({
            variant: "outline",
            size: "sm",
            className: "flex-1 rounded-full bg-transparent text-xs sm:flex-none"
          })}
        >
          <Github className="h-3 w-3 mr-1" />
          {t.projects.github}
        </a>
      )
    }

    <a
      href={data.liveUrl}
      target="_blank"
      rel="noopener noreferrer"
      class={buttonVariants({
        variant: "default",
        size: "sm",
        className: "text-xs px-3 sm:px-4 py-2 flex-1 sm:flex-none"
      })}
    >
      <ExternalLink className="mr-1 h-3 w-3" />
      {t.projects.demo}
    </a>
  </CardFooter>
</Card>
