---
import { getRelativeLocaleUrl } from "astro:i18n"
import { Icon } from "astro-icon/components"

import AsideMobileMenu from "./AsideMobileMenu.astro"
import ToggleLanguage from "../ToggleLanguage.astro"
import { ModeToggle } from "@/components/ModeToggle"

import type { LanguageData } from "@/types/language"

type Props = {
  t: LanguageData
}

const { t } = Astro.props
const { nav } = t

const navItems = [
  { href: "#about", label: nav.about },
  { href: "#projects", label: nav.projects },
  { href: "#contact", label: nav.contact }
]

const currentLang = Astro.currentLocale || "es"
---

<nav
  id="top-menu"
  class="fixed top-0 right-0 left-0 z-50 opacity-100 transition-all duration-300"
>
  <section class="mx-auto max-w-3xl">
    <div class="relative flex h-16 items-center justify-between sm:h-20">
      <a
        href={getRelativeLocaleUrl(currentLang, "/")}
        class="bg-accent-foreground mx-5 rounded-full text-lg font-medium tracking-tight transition-transform duration-300 hover:scale-105 sm:text-2xl lg:mx-0"
      >
        <Icon
          name="logo-1"
          class="inline size-12 text-white sm:size-14 dark:text-black"
        />
      </a>

      <div
        class="absolute top-1/2 left-1/2 hidden -translate-x-1/2 -translate-y-1/2 items-center space-x-8 lg:flex lg:space-x-12"
      >
        {
          navItems.map(({ href, label }) => (
            <a
              href={currentLang === "es" ? `/${href}` : `/en/${href}`}
              class="hover:text-primary group text-sm font-medium transition-all duration-500 hover:scale-105"
            >
              {label}
              <span class="bg-primary absolute -bottom-1 left-0 h-0.5 w-0 transition-all duration-300 group-hover:w-full" />
            </a>
          ))
        }
      </div>

      <div
        class="flex items-center justify-center gap-2 px-5 sm:space-x-3 lg:px-0"
      >
        <ToggleLanguage />
        <ModeToggle client:load />
        <AsideMobileMenu navItems={navItems} />
      </div>
    </div>
  </section>
</nav>

<style>
  @reference "@/styles/global.css";

  .top-menu-nav {
    @apply bg-background/80 dark:border-muted-foreground/10 border-b backdrop-blur-3xl;
  }
</style>

<script>
  import { $ } from "@/lib/dom-selector"

  document.addEventListener("astro:page-load", () => {
    window.addEventListener("scroll", handleScroll, { passive: true })
  })

  let lastScrollTop = 0

  function handleScroll() {
    const $topMenu = $("#top-menu") as HTMLElement

    const { scrollY } = window

    if (scrollY > lastScrollTop) {
      $topMenu.classList.remove("top-menu-nav")
      $topMenu.classList.remove("opacity-100")
      $topMenu.classList.add("opacity-0")
    } else {
      $topMenu.classList.add("top-menu-nav")
      $topMenu.classList.remove("opacity-0")
      $topMenu.classList.add("opacity-100")
    }

    lastScrollTop = scrollY <= 0 ? 0 : scrollY
  }
</script>
